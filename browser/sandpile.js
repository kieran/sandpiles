// Generated by CoffeeScript 1.9.1
var Sandpile;

Sandpile = (function() {
  function Sandpile(size, canvas_id) {
    var i, idx, len, ref, row;
    this.size = size;
    this.canvas_id = canvas_id;
    this.matrix = new Array(this.size);
    ref = this.matrix;
    for (idx = i = 0, len = ref.length; i < len; idx = ++i) {
      row = ref[idx];
      this.matrix[idx] = new Array(this.size);
    }
    this.canvas = document.getElementById(this.canvas_id);
  }

  Sandpile.prototype.drop = function(x, y) {
    if (!((0 <= x && x < this.size))) {
      return;
    }
    if (!((0 <= y && y < this.size))) {
      return;
    }
    this.matrix[x][y] = (this.matrix[x][y] || 0) + 1;
    if (this.matrix[x][y] === 4) {
      this.matrix[x][y] = 0;
      this.drop(x + 1, y);
      this.drop(x - 1, y);
      this.drop(x, y + 1);
      return this.drop(x, y - 1);
    }
  };

  Sandpile.prototype.colours = ["#000", "#009", "#900", "#090"];

  Sandpile.prototype.draw = function() {
    var ctx, i, len, ref, results, row, val, x, y;
    this.canvas.width = this.size;
    this.canvas.height = this.size;
    ctx = this.canvas.getContext('2d');
    ref = this.matrix;
    results = [];
    for (x = i = 0, len = ref.length; i < len; x = ++i) {
      row = ref[x];
      results.push((function() {
        var j, len1, results1;
        results1 = [];
        for (y = j = 0, len1 = row.length; j < len1; y = ++j) {
          val = row[y];
          ctx.fillStyle = this.colours[this.matrix[x][y] || 0];
          results1.push(ctx.fillRect(x, y, 2, 2));
        }
        return results1;
      }).call(this));
    }
    return results;
  };

  Sandpile.prototype.run = function(max, from, drawEvery) {
    var drawAt, now, x, y;
    if (max == null) {
      max = 1000000000;
    }
    if (from == null) {
      from = 0;
    }
    if (drawEvery == null) {
      drawEvery = 10000;
    }
    x = y = Math.ceil(this.size / 2);
    drawAt = Math.min(from + drawEvery, max);
    now = Date.now();
    while (++from < drawAt) {
      this.drop(x, y);
    }
    $('body:first').append($("<div>" + ((Date.now() - now) / 1000) + " seconds</div>"));
    return window.requestAnimationFrame((function(_this) {
      return function() {
        _this.draw();
        if (!(from >= max)) {
          return _this.run(max, drawAt, drawEvery);
        }
      };
    })(this));
  };

  return Sandpile;

})();
